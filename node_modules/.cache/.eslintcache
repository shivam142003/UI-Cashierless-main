[{"C:\\Users\\Shivam\\OneDrive\\Desktop\\UI-Cashierless-finalmain\\UI-Cashierless-main\\src\\index.js":"1","C:\\Users\\Shivam\\OneDrive\\Desktop\\UI-Cashierless-finalmain\\UI-Cashierless-main\\src\\reportWebVitals.js":"2","C:\\Users\\Shivam\\OneDrive\\Desktop\\UI-Cashierless-finalmain\\UI-Cashierless-main\\src\\CounterComponent.js":"3","C:\\Users\\Shivam\\OneDrive\\Desktop\\UI-Cashierless-finalmain\\UI-Cashierless-main\\src\\Results.js":"4","C:\\Users\\Shivam\\OneDrive\\Desktop\\UI-Cashierless-finalmain\\UI-Cashierless-main\\src\\Home.js":"5","C:\\Users\\Shivam\\OneDrive\\Desktop\\UI-Cashierless-finalmain\\UI-Cashierless-main\\src\\UPIQRCode.js":"6","C:\\Users\\Shivam\\OneDrive\\Desktop\\UI-Cashierless-finalmain\\UI-Cashierless-main\\src\\App.js":"7","C:\\Users\\Shivam\\OneDrive\\Desktop\\UI-Cashierless-finalmain\\UI-Cashierless-main\\src\\test.js":"8"},{"size":599,"mtime":1695569557917,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1695526072033,"results":"11","hashOfConfig":"10"},{"size":5350,"mtime":1695546963663,"results":"12","hashOfConfig":"10"},{"size":5724,"mtime":1695526071423,"results":"13","hashOfConfig":"10"},{"size":0,"mtime":1695526071392,"results":"14","hashOfConfig":"10"},{"size":441,"mtime":1695526071454,"results":"15","hashOfConfig":"10"},{"size":214,"mtime":1695632701147,"results":"16","hashOfConfig":"10"},{"size":2028,"mtime":1695569876685,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"werhsu",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Shivam\\OneDrive\\Desktop\\UI-Cashierless-finalmain\\UI-Cashierless-main\\src\\index.js",[],[],[],"C:\\Users\\Shivam\\OneDrive\\Desktop\\UI-Cashierless-finalmain\\UI-Cashierless-main\\src\\reportWebVitals.js",[],[],"C:\\Users\\Shivam\\OneDrive\\Desktop\\UI-Cashierless-finalmain\\UI-Cashierless-main\\src\\CounterComponent.js",["45"],[],"import React, { useState, useRef,useEffect  } from 'react';\nimport axios from 'axios';\nimport './CounterComponent.css';\nimport defaultImage from './camera-solid.svg';\nimport './Style.css';\nimport { Modal } from '@mui/material';\nimport  Results  from './Results';\n\n\n\nconst CounterComponent = () => {\n    const [isCameraOpen, setIsCameraOpen] = useState(false);\n    const [processedImageSrc, setProcessedImageSrc] = useState('');\n    const [output, setOutput] = useState([]);\n    const videoRef = useRef(null);\n    const canvasRef = useRef(null);\n    const processedImageRef = useRef(null);\n    const captureBtnRef = useRef(null);\n    const [isModal,setModel]=useState(false);\n    \n\n    useEffect(() => {\n      // Set the default image source on component mount\n      setProcessedImageSrc(defaultImage);\n    }, []);\n\n    const updateOutput = (data) => {\n               console.log(data)\n            setOutput(data);\n    };\n    const openCamera = () => { \n   navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' } }) \n     .then((stream) => { \n         processedImageRef.current.style.display = 'none'; \n         videoRef.current.style.display = 'block'; \n       videoRef.current.srcObject = stream; \n       videoRef.current.play(); \n       setIsCameraOpen(true); \n       captureBtnRef.current.textContent = 'Capture'; \n     }) \n     .catch((error) => { \n       console.error('Error accessing the rear camera: ', error); \n     }); \n};\n\n    const captureImage = () => {\n        const video = videoRef.current;\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n      \n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n      \n        video.pause();\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n      \n        const dataURL = canvas.toDataURL('image/jpeg');\n      \n        const stream = video.srcObject;\n        const tracks = stream.getTracks();\n        tracks.forEach((track) => track.stop());\n      \n        axios\n          .post('https://ivashlok.pythonanywhere.com/process-image', { image: dataURL })\n          .then((response) => {\n            const timestamp = Date.now();\n            const processedImageUrl = `https://ivashlok.pythonanywhere.com/processed-image/processed_image.jpg?t=${timestamp}`;\n            setProcessedImageSrc(processedImageUrl);\n            processedImageRef.current.style.display = 'block';\n            videoRef.current.style.display = 'none';\n\n            captureBtnRef.current.textContent = 'Capture Image';\n            captureBtnRef.current.disabled = false;\n            updateOutput(response.data.output);\n            setIsCameraOpen(false);\n            setModel(true);\n          })\n          .catch((error) => {\n            console.error('Error processing the image:', error);\n          });\n      };\n  \n    const toggleCapture = () => {\n      if (!isCameraOpen) {\n        setIsCameraOpen(true);\n        captureBtnRef.current.textContent = 'Capture';\n        openCamera();\n      } else {\n        captureBtnRef.current.disabled = true;\n        captureBtnRef.current.textContent = 'Processing...';\n        captureImage();\n      }\n    };\n  \n    return (\n<div>\n  <p className=\"moving-text\">welcome to I mart!! you are logged in as Cashier</p>\n  <section class=\"pimg2\">\n      <div class=\"ptext\">\n          <span class=\"textBg\">Scroll down to Proceed towards billing</span>\n      </div>\n  </section>\n  <section class=\"section section-dark\" id=\"sectionp1\">\n    {/* <button class=\"icon-button\">\n      <i class=\"fa fa-user fa-4x\" id='user'></i>\n    </button> */}\n    <button class=\"icon-button\">\n        Admin Access\n    </button>\n      {/* <p id=\"p1\"><br/>Only Admin can access this portal</p> */}\n  </section>\n  <section class=\"pimg3\">\n      <div class=\"ptext\">\n          <span class=\"textBg\">CASHIERLESS COUNTER</span>\n      </div>\n  </section>\n  <section class=\"section section-dark\">\n      <h2 class=\"textBg\">WE Ensure Barcode Free scan</h2>\n      <p id=\"p2\">Capture all Items in a one go</p>\n  </section>\n  <section class=\"pimg1\">\n      <div class=\"ptext\">\n          <span class=\"textBg\">\n\n          </span>\n          \n      </div>\n      </section>\n        <div className=\"center\">\n          <div id=\"video-container\">\n            <video id=\"video\" width=\"640\" height=\"480\" style={{ height: '450px', width: '600px', borderRadius: '10%', boxShadow: '0 0 10px rgba(0.3, 0.3, 0.3, 0.7)', display: 'none' }} ref={videoRef}></video>\n            <img id=\"processed-image\" src={processedImageSrc} style={{ height: '450px', width: '600px', borderRadius: '10%', boxShadow: '0 0 10px rgba(0.3, 0.3, 0.3, 0.7)' }}ref={processedImageRef}></img>\n          </div>\n          <canvas id=\"canvas\" style={{ display: 'none' }} ref={canvasRef}></canvas>\n        </div>\n        <div className=\"center\">\n          <button id=\"capture-btn\" onClick={toggleCapture} ref={captureBtnRef}>Capture Image</button>\n        </div>\n        <div className='modaldiv'>\n\n        <Modal \n        open={isModal}\n        className={`modal ${isModal ? 'fade-in' : 'fade-out'}`}\n        closeAfterTransition\n       >\n      <Results path={processedImageSrc} output={output} closeModel={setModel} processimage={setProcessedImageSrc} />\n       \n       \n       </Modal>\n        </div>\n    </div>\n       \n    );\n  };\n  \n  export default CounterComponent;\n  ","C:\\Users\\Shivam\\OneDrive\\Desktop\\UI-Cashierless-finalmain\\UI-Cashierless-main\\src\\Results.js",["46","47","48","49","50","51","52","53","54","55","56"],[],"import { useEffect, useRef, useState } from \"react\";\nimport defaultImage from './camera.svg';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport './modal.css';\nimport UPIQRCode from './UPIQRCode';\nimport Home from './Home.js';\nimport {\n  Cluster,\n  clusterApiUrl,\n  Connection,\n  PublicKey,\n  Keypair,\n  LAMPORTS_PER_SOL,\n} from \"@solana/web3.js\";\nimport { encodeURL, createQR } from \"@solana/pay\";\nimport BigNumber from \"bignumber.js\";\nimport QRCodeStyling from '@solana/qr-code-styling';\n\n\nconst Results = (props) => {\n  const {path,output,closeModel,processimage}=props\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [issolDisabled, setsolIsDisabled] = useState(false);\n  const [balance, setBalance] = useState(0);\n  const [txDone, setTxDone] = useState(false);\n  const ref = useRef(null);\n  let url='';\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n        checkTx();\n    }, 1000);\n\n    return () => {\n        clearInterval(timer);\n    };\n}, []);\n\nasync function checkTx() {\n  const balNew = await fetchBalance();\n  console.log(\"checked\", balNew);\n  console.log(\"balance dekhlo\", balance)\n  if (balNew != balance) {\n      setTxDone(true);\n      console.log(\"tx hogaya bro\", balance);\n  }\n}\nasync function fetchBalance() {\n  const address = reciptaddress;\n  const key = new PublicKey(address);\n  const connection = new Connection(clusterApiUrl(\"devnet\"));\n  const bal = await connection.getBalance(key);\n  return bal / LAMPORTS_PER_SOL;\n}\n\nfunction createTxQr(recipientAddr, Amount) {\n  const recipient = new PublicKey(recipientAddr);\n  const amount = new BigNumber(Amount);\n  const reference = new Keypair().publicKey;\n  const label = \"\"; //project name\n  const message = \"\"; //what message on tx ?\n  const memo = \"\"; //project name\n  const url = encodeURL({\n      recipient,\n      amount,\n      reference,\n      label,\n      message,\n      memo,\n  });\n  console.log(\"url\", url.href);\n\n  if (typeof window !== \"undefined\") {\n      const qrCode = createQR(url,200);\n      qrCode.append(ref.current);\n  }\n  \n  console.log(\"bro bal\", balance)\n}\n\n  function createData(Item, Quantity, Cost) {\n    return {Item, Quantity, Cost};\n  }\n  let map=[];\n  let names=[\"kurkure\",\"parleg\",\"lays\",\"redbull\"];\n  let counter=[0,0,0,0]\n  let cost=[20,10,20,125]\n  let totalcost=0;\n  let soltotalcost=0;\n  let upiId=\"shlok08@ybl\";\n  console.log(output)\n  console.log(typeof(output))\n  for (var j = 0; j < output.length; j++) {\n    var item = output[j];\n  \n    if(item==0)\n    {\n      counter[0]++; \n    }\n    else if(item ===2 )\n    {\n      counter[2]++;\n  }\n    else if(item ===1 )\n    {  \n      counter[1]++;\n    \n  }\n  else\n  {\n    counter[3]++; \n}\n    }\n    let i = 0;\n\n   \nwhile (i < counter.length) {\n  \n    if(counter[i]!==0){\n      console.log(i+\"   \"+counter[i]);\n      map.push(createData(names[i],counter[i],cost[i]*counter[i]))\n      totalcost=totalcost+cost[i]*counter[i];\n    }\n    i++;\n}\nsoltotalcost=totalcost*0.001;\n\nconsole.log(map)\n  function onclickfun(){\n    \n    processimage(defaultImage)\n    closeModel(false);\n  }\n  function upigenrator(){\n    setsolIsDisabled(true)\n    setIsDisabled(false)\n  }\n\n  function solanaqr(){\n\n    createTxQr(reciptaddress,soltotalcost)\n    setIsDisabled(true)\n\nsetsolIsDisabled(false)\n  }\n\nlet reciptaddress='kTTpYq1DrudiVtnGKVwZcc5SYvRi3PhF2ai5kVqzkiu';\n  \n  \n  \n\n  return (\n    <div className='total'>\n    <div className='leftside'>\n      <img src={path} id=\"imagefinal\"></img>\n      <div id=\"table\"><TableContainer style={{ maxHeight: '100%', overflow: 'auto',backgroundColor:'#3F2305' }} component={Paper}>\n      <Table sx={{ minWidth: 650, fontSize: '14rem' ,color:'beige'}}  style={{ maxHeight: '10%', overflow: 'auto' }}saria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell sx={{ fontSize: '2rem',color:\"beige\" }}>Item</TableCell>\n            <TableCell sx={{ fontSize: '2rem',color:\"beige\" }} align=\"right\">Quantity&nbsp;</TableCell>\n            <TableCell sx={{ fontSize: '2rem',color:\"beige\" }} align=\"right\">Cost&nbsp;(Rs)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {map.map((row) => (\n            <TableRow \n              key={row.name}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 }, fontSize: '1.5rem',color:\"beige\" }}\n            >\n              <TableCell component=\"th\" scope=\"row\" sx={{ fontSize: '1.2  rem',color:\"beige\" }}>\n                {row.Item} \n              </TableCell>\n              <TableCell align=\"right\" sx={{ fontSize: '1.2  rem',color:\"beige\" }}>{row.Quantity}</TableCell>\n              <TableCell align=\"right\"sx={{ fontSize: '1.2  rem',color:\"beige\" }}>{row.Cost}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer></div>\n      \n    \n    </div>\n    <div className='rightside'>\n      <h2 id=\"finalamt\"> The total payable amount is Rs. {totalcost}</h2>\n      <button className='paymentbtn' onClick={solanaqr}> Pay With Solana</button>\n      <button className='paymentbtn upi' onClick={upigenrator}> Pay With Upi</button>\n      <div id=\"qrimage\">\n      {isDisabled ? null : (\n        <UPIQRCode amount={totalcost} />\n      )}\n    </div>\n    <div id=\"qrimage\">\n      {issolDisabled ? null : (\n        <div id=\"qrimage\" ref={ref}></div>\n      )}\n    </div>\n    <button id=\"sucess\" onClick={onclickfun}>On Sucess</button>\n    </div>\n    </div>\n  );\n};\n\nexport default Results;\n","C:\\Users\\Shivam\\OneDrive\\Desktop\\UI-Cashierless-finalmain\\UI-Cashierless-main\\src\\Home.js",[],[],"C:\\Users\\Shivam\\OneDrive\\Desktop\\UI-Cashierless-finalmain\\UI-Cashierless-main\\src\\UPIQRCode.js",[],[],"C:\\Users\\Shivam\\OneDrive\\Desktop\\UI-Cashierless-finalmain\\UI-Cashierless-main\\src\\App.js",[],[],"C:\\Users\\Shivam\\OneDrive\\Desktop\\UI-Cashierless-finalmain\\UI-Cashierless-main\\src\\test.js",["57"],[],{"ruleId":"58","severity":1,"message":"59","line":132,"column":13,"nodeType":"60","endLine":132,"endColumn":199},{"ruleId":"61","severity":1,"message":"62","line":12,"column":8,"nodeType":"63","messageId":"64","endLine":12,"endColumn":12},{"ruleId":"61","severity":1,"message":"65","line":14,"column":3,"nodeType":"63","messageId":"64","endLine":14,"endColumn":10},{"ruleId":"61","severity":1,"message":"66","line":23,"column":8,"nodeType":"63","messageId":"64","endLine":23,"endColumn":21},{"ruleId":"61","severity":1,"message":"67","line":30,"column":19,"nodeType":"63","messageId":"64","endLine":30,"endColumn":29},{"ruleId":"61","severity":1,"message":"68","line":31,"column":10,"nodeType":"63","messageId":"64","endLine":31,"endColumn":16},{"ruleId":"61","severity":1,"message":"69","line":33,"column":7,"nodeType":"63","messageId":"64","endLine":33,"endColumn":10},{"ruleId":"70","severity":1,"message":"71","line":43,"column":4,"nodeType":"72","endLine":43,"endColumn":6,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":49,"column":14,"nodeType":"76","messageId":"77","endLine":49,"endColumn":16},{"ruleId":"61","severity":1,"message":"78","line":96,"column":7,"nodeType":"63","messageId":"64","endLine":96,"endColumn":12},{"ruleId":"74","severity":1,"message":"79","line":102,"column":12,"nodeType":"76","messageId":"77","endLine":102,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":161,"column":7,"nodeType":"60","endLine":161,"endColumn":39},{"ruleId":"61","severity":1,"message":"80","line":5,"column":9,"nodeType":"63","messageId":"64","endLine":5,"endColumn":20},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'Cluster' is defined but never used.","'QRCodeStyling' is defined but never used.","'setBalance' is assigned a value but never used.","'txDone' is assigned a value but never used.","'url' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkTx'. Either include it or remove the dependency array.","ArrayExpression",["81"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'upiId' is assigned a value but never used.","Expected '===' and instead saw '=='.","'useNavigate' is defined but never used.",{"desc":"82","fix":"83"},"Update the dependencies array to be: [checkTx]",{"range":"84","text":"85"},[1265,1267],"[checkTx]"]